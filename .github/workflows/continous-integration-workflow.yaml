name: Build

on: push

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function

      - name: Install Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Update apt repositories
        run: sudo apt update

      - name: Install Java
        run: sudo apt-get install --yes default-jre default-jdk

      - name: Install node
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo apt-get install -y nodejs

      - name: Upgrade python packaging tools
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install poetry
        run: pip install poetry

      - name: Cache poetry packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-build-cache-poetry-packages-${{ hashFiles('**/poetry.lock') }}

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install repo
        run: make install

      - name: Start local sandbox server
        run: |
          cd sandbox
          npm run start &

      - name: Check licenses
        run: make check-licenses

      - name: Lint
        run: make lint

      - name: Check resources are valid FHIR 4.0.1
        run: make validate

      - name: Compile spec
        run: make publish

      - name: Generate release
        run: make release

      - name: Set SPEC_VERSION env var
        run: echo ::set-env name=SPEC_VERSION::$(poetry run python scripts/calculate_version.py)
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Create release (master only)
        id: create-release
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SPEC_VERSION }}
          release_name: ${{ env.SPEC_VERSION }}
